@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Http
@using Radzen.Blazor
@inherits LayoutComponentBase
@inject ThemeState ThemeState
@inject ExampleService ExampleService
@inject NavigationManager UriHelper
@inject IJSRuntime JSRuntime
@inject IHttpContextAccessor httpContextAccessor

@if (Theme != "default.css")
{
    <link href="_content/Radzen.Blazor/css/@(Theme)" rel="stylesheet" />
}
<RadzenDialog />
<RadzenNotification />

<RadzenHeader>
    <ChildContent>
        <div class="row justify-content-start align-items-center">
            <div class="col-6 d-flex align-items-center">
                <RadzenSidebarToggle Click="@(args => { sidebarExpanded = !sidebarExpanded; bodyExpanded = !bodyExpanded; })">
                </RadzenSidebarToggle>
                <RadzenLabel Text="Radzen Blazor Components">
                </RadzenLabel>
            </div>
            <div class="col-6 d-flex align-items-center justify-content-end">
                <div class="d-none d-md-inline-flex align-items-center">
                    <iframe frameborder="0" scrolling="no" src="https://platform.twitter.com/widgets/follow_button.html?screen_name=radzenhq&show_screen_name=false&show_count=true" width="150px" height="20px"></iframe>
                    <iframe src="https://ghbtns.com/github-btn.html?user=akorchev&repo=blazor.radzen.com&type=star&count=true" frameborder="0" scrolling="0" width="100px" height="20px"></iframe>
                    <iframe ng-non-bindable="" frameborder="0" hspace="0" marginheight="0" marginwidth="0" scrolling="no" style="position: static; top: 0px; width: 115px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 24px;" tabindex="0" vspace="0" width="100%" id="I23_1580801975820" name="I23_1580801975820" src="https://www.youtube.com/subscribe_embed?usegapi=1&amp;channelid=UCAX4L9SPAigw41-RqTYEeKg&amp;layout=default&amp;count=default&amp;origin=https%3A%2F%2Fdevelopers-dot-devsite-v2-prod.appspot.com&amp;gsrc=3p&amp;ic=1&amp;jsh=m%3B%2F_%2Fscs%2Fapps-static%2F_%2Fjs%2Fk%3Doz.gapi.en.xh-S9KbEGSE.O%2Fam%3DwQc%2Fd%3D1%2Fct%3Dzgms%2Frs%3DAGLTcCNaUSRWzhd71dAsiMVOstVE3KcJZw%2Fm%3D__features__#_methods=onPlusOne%2C_ready%2C_close%2C_open%2C_resizeMe%2C_renderstart%2Concircled%2Cdrefresh%2Cerefresh&amp;id=I23_1580801975820&amp;_gfid=I23_1580801975820&amp;parent=https%3A%2F%2Fdevelopers-dot-devsite-v2-prod.appspot.com&amp;pfname=&amp;rpctoken=26041136" data-gapiattached="true"></iframe>
                </div>
                <NavLink class="btn-secondary d-none d-md-inline-block" style="padding: 0 1rem; margin: 1rem" href="/get-started">Get started</NavLink>
                <label class="d-none d-sm-inline-block">Theme:</label>
                <RadzenDropDown style="margin:0 1rem" TValue="string" TextProperty="Text" ValueProperty="Value" Data="@themes" Value="@ThemeState.CurrentTheme" Change="@ChangeTheme" />
            </div>
        </div>
    </ChildContent>
</RadzenHeader>
<div style="width:100%">
    <RadzenBody @ref="@body0" @bind-Expanded="@bodyExpanded">
        <ChildContent>
            <RadzenContentContainer Name="main">
                @Body
            </RadzenContentContainer>
        </ChildContent>
    </RadzenBody>
</div>
<RadzenSidebar @ref="@sidebar0" @bind-Expanded="@sidebarExpanded">
    <ChildContent>
        <div style="padding: 1rem">
            <span style="width: 100%" class="ui-autocomplete ui-widget">
                <input placeholder="Find component ..." class="ui-inputtext ui-widget ui-state-default ui-corner-all ui-autocomplete-input" type="search" @oninput="@FilterPanelMenu" />
            </span>
        </div>
        <RadzenPanelMenu>
            @foreach (var category in examples)
            {
                <RadzenPanelMenuItem @bind-Expanded="@category.Expanded" Text="@category.Name" Path="@category.Path" Icon="@category.Icon">
                    @if (category.Children != null)
                    {
                        @foreach (var example in category.Children)
                        {
                            <RadzenPanelMenuItem Text="@example.Name" Path="@example.Path" Icon="@example.Icon" />
                        }
                    }
                </RadzenPanelMenuItem>
            }
        </RadzenPanelMenu>
    </ChildContent>
</RadzenSidebar>
<RadzenFooter>
    <ChildContent>
        <RadzenLabel Text="Radzen Blazor Components, Copyright &copy; 2019">
        </RadzenLabel>
    </ChildContent>
</RadzenFooter>
@code {
    RadzenSidebar sidebar0;
    RadzenBody body0;
    bool sidebarExpanded = true;
    bool bodyExpanded = false;

    dynamic themes = new[]
    {
        new { Text = "Default", Value = "default"},
        new { Text = "Dark", Value="dark" },
        new { Text = "Software", Value = "software"},
        new { Text = "Humanistic", Value = "humanistic" }
    };

    IEnumerable<Example> examples;

    string Theme
    {
        get
        {
            return $"{ThemeState.CurrentTheme}.css";
        }
    }

    protected override void OnInitialized()
    {
        var userAgent = httpContextAccessor.HttpContext.Request.Headers["User-Agent"].FirstOrDefault();
        if (!string.IsNullOrEmpty(userAgent))
        {
            if (userAgent.Contains("iPhone") || userAgent.Contains("Android") || userAgent.Contains("Googlebot"))
            {
                sidebarExpanded = false;
                bodyExpanded = true;
            }
        }

        examples = ExampleService.Examples;

        System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-US");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            var example = ExampleService.FindCurrent(UriHelper.ToAbsoluteUri(UriHelper.Uri));

            await JSRuntime.InvokeVoidAsync("setTitle", ExampleService.TitleFor(example));
        }
    }

    void FilterPanelMenu(ChangeEventArgs args)
    {
        var term = args.Value.ToString();

        examples = ExampleService.Filter(term);
    }

    void ChangeTheme(object value)
    {
        ThemeState.CurrentTheme = value.ToString();
        UriHelper.NavigateTo(UriHelper.ToAbsoluteUri(UriHelper.Uri).ToString());
    }
}
