@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Http
@using Radzen.Blazor
@inject ThemeState ThemeState
@inject IUriHelper UriHelper
<link href="css/@(Theme)" rel="stylesheet" />
<RadzenDialog />
<div class="rz-sidebar" style="@width">
    <div class="header fixed ng-trigger ng-trigger-open" style="margin-left: 0px;">
        <div class="row justify-content-start align-items-center">
            <div class="col-md-6 d-flex align-items-center">
                <button class="sidebar-toggle" onclick=@ToggleNavMenu>
                    <i class="material-icons d-flex align-items-center">menu</i>
                </button>
                <label>Radzen Blazor Components</label>
            </div>
            <div class="col-md-6 d-flex align-items-center justify-content-end">
                <NavLink class="btn-secondary" style="padding: 0 1rem; margin: 1rem; display: inline-block;" href="/get-started">Get started</NavLink>
                <div style="margin: 1rem">Theme: <RadzenDropDown TextProperty="Text" ValueProperty="Value" Data="@themes" Value="@ThemeState.CurrentTheme" Change="@ChangeTheme" /></div>
            </div>
        </div>
    </div>
</div>
<div class="rz-sidebar" style="@($"top: 68px; bottom: 57px; {transform}")">
    <ul class="panel-menu " style="height: 100%;">
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="/" Match="NavLinkMatch.All">
                    <i class="material-icons navigation-item-icon">home</i>
                    <span class="navigation-item-text">First Look</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="datagrid">
                    <i class="material-icons navigation-item-icon">grid_on</i>
                    <span class="navigation-item-text">DataGrid</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="datalist">
                    <i class="material-icons navigation-item-icon">list</i>
                    <span class="navigation-item-text">DataList</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="tabs">
                    <i class="material-icons navigation-item-icon">tab</i>
                    <span class="navigation-item-text">Tabs</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="buttons">
                    <i class="material-icons navigation-item-icon">account_circle</i>
                    <span class="navigation-item-text">Buttons</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="checkbox">
                    <i class="material-icons navigation-item-icon">check_circle</i>
                    <span class="navigation-item-text">CheckBox</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="textbox">
                    <i class="material-icons navigation-item-icon">input</i>
                    <span class="navigation-item-text">TextBox</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="textarea">
                    <i class="material-icons navigation-item-icon">description</i>
                    <span class="navigation-item-text">TextArea</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="password">
                    <i class="material-icons navigation-item-icon">payment</i>
                    <span class="navigation-item-text">Password</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="numeric">
                    <i class="material-icons navigation-item-icon">aspect_ratio</i>
                    <span class="navigation-item-text">Numeric</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="datepicker">
                    <i class="material-icons navigation-item-icon">date_range</i>
                    <span class="navigation-item-text">DatePicker</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="dropdown">
                    <i class="material-icons navigation-item-icon">dns</i>
                    <span class="navigation-item-text">DropDown</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="listbox">
                    <i class="material-icons navigation-item-icon">view_list</i>
                    <span class="navigation-item-text">ListBox</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="panel">
                    <i class="material-icons navigation-item-icon">content_paste</i>
                    <span class="navigation-item-text">Panel</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="fieldset">
                    <i class="material-icons navigation-item-icon">account_balance_wallet</i>
                    <span class="navigation-item-text">Fieldset</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="card">
                    <i class="material-icons navigation-item-icon">line_style</i>
                    <span class="navigation-item-text">Card</span>
                </NavLink>
            </div>
        </li>
        <li class="navigation-item">
            <div class="navigation-item-wrapper">
                <NavLink class="navigation-item-link" href="dialog">
                    <i class="material-icons navigation-item-icon">perm_media</i>
                    <span class="navigation-item-text">Dialog</span>
                </NavLink>
            </div>
        </li>
    </ul>
</div>

<div class="body" style="@($"width:100%;margin-top: 51px;margin-bottom: 57px;{margin}")">
    <div class="content">
        @Body
    </div>
</div>
@code {
    string transform = "";
    string margin = "margin-left: 250px;";
    string width = "width: 250px;";

    dynamic themes = new [] 
    { 
        new {Text = "Default", Value = "default"}, 
        new { Text = "Dark", Value="dark" }, 
        new { Text = "Software", Value = "software"}, 
        new { Text = "Humanistic", Value = "Humanistic" } 
    };

    void ToggleNavMenu()
    {
        transform = transform == "" ? "transform: translateX(-100%);" : "";
        margin = margin == "margin-left: 0px;" ? "margin-left: 250px;" : "margin-left: 0px;";
        width = width == "width: 0px;" ? "width: 250px;" : "width: 0px;";
    }

    string Theme
    {
        get
        {
            return $"{ThemeState.CurrentTheme}.css";
        }
    }

    void ChangeTheme(object value)
    {
        ThemeState.CurrentTheme = value.ToString();
        UriHelper.NavigateTo(UriHelper.GetAbsoluteUri());
    }
}
