@page "/datagrid-conditional-template"

@using NorthwindBlazor.Data
@using NorthwindBlazor.Models.Northwind
@using Microsoft.EntityFrameworkCore

@inject NorthwindContext dbContext

<h1>DataGrid conditional template</h1>

<p>This page demonstrates <b>DataGrid</b> with conditional cell template/style for Quantity column.</p>

<RadzenExample Name="DataGridConditionalTemplate" Heading="false" Documentation="false">
    @if (orderDetails == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <h3>Order Details</h3>
        <RadzenGrid AllowFiltering="true" AllowPaging="true" AllowSorting="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                    Data="@orderDetails" TItem="OrderDetail" ColumnWidth="200px">
            <Columns>
                <RadzenGridColumn TItem="OrderDetail" Property="Product.ProductName" Title="Product" />
                <RadzenGridColumn TItem="OrderDetail" Property="Quantity" Title="Quantity">
                    <Template Context="data">
                        @if (data.Quantity > 20)
                        {
                            <span style='color:red'>@data.Quantity</span>
                        }
                        else
                        {
                            <span style='color:blue'>@data.Quantity</span>
                        }
                    </Template>
                </RadzenGridColumn>
                <RadzenGridColumn TItem="OrderDetail" Property="Discount" Title="Discount" FormatString="{0:P}" />
            </Columns>
        </RadzenGrid>
    }
</RadzenExample>

@code {
    IEnumerable<OrderDetail> orderDetails;

    protected override async Task OnInitializedAsync()
    {
        orderDetails = await Task.FromResult(dbContext.OrderDetails.Include("Product"));
    }
}
